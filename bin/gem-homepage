#!/usr/bin/env ruby
# gem-homepage

# 20240317
# 0.2.0

# Changes since 0.1:
# -/0: There's quite a few 'mezzanine' or 'child' gems which use the name of the 'main' gem at the start of its name which sort last and are being found instead.
# 1. ~ most_recent_gem_specification_file_path: Add an additional filter to check that the version numbers happen immediately after the name of the gem.

# Note:
# 1. I could either glob nothing and just grab everything in the gem_specification_path or let the faster filesystem code do some of the work and me do less work changing this!

def gem_name
  ARGV[0]
end

def rubygems_home
  ENV['GEM_HOME']
end

def gem_specification_path
  [rubygems_home, 'specifications'].join('/')
end

def gemspec_filename_glob_pattern(gem_name)
  [gem_name, '*.gemspec'].join
end

def gem_specification_path_glob_pattern(gem_name)
  [gem_specification_path, gemspec_filename_glob_pattern(gem_name)].join('/')
end

# There's no need to index this memoized method because this program is single use.
def most_recent_gem_specification_file_path(gem_name)
  @most_recent_gem_specification_file_path ||= (
    globbed_matches = Dir.glob(gem_specification_path_glob_pattern(gem_name)) # 1...
    globbed_matches.select{|globbed_match| globbed_match.match(/#{gem_name}-[\d\.]*\d+\.gemspec/)}.sort.last
  )
end

def gem_specification(gem_name)
  if most_recent_gem_specification_file_path(gem_name)
    instance_eval(File.read(most_recent_gem_specification_file_path(gem_name)))
  end
end

def gem_homepage(gem_name)
  gem_specification(gem_name)&.homepage
end

def open_homepage(gem_name)
  if gem_homepage(gem_name)
    system("open #{gem_homepage(gem_name)}")
  else
    puts "No gem by the name of #{gem_name} was found."
  end
end

def main
  open_homepage(gem_name)
end

main
